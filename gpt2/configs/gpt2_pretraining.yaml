defaults:
  - model: gpt2 # "gpt2_minimal", "gpt2_medium", "gpt2_large", "gpt2_xl"
  - data: exponential-giant
  - dataset: giant-mid-coarse-augmented
  - logging: pretraining
  - lr: pretraining-large

out_dir: 'checkpoints'
eval_interval: 100

eval_iters: 100
eval_only: false  # if True, script exits right after the first eval
always_save_checkpoint: false  # if True, always save a checkpoint after each eval
init_from: 'scratch'  # 'scratch' or 'resume' or 'midi-gpt2*'
task: pretraining

optimizer:
  learning_rate: 6e-4  # max learning rate
  weight_decay: 0.1
  max_iters: ${data.max_iters} # define max_iters in data but leave the parameter here as well
  beta1: 0.9
  beta2: 0.95
  grad_clip: 1.0  # clip gradients at this value, or disable if == 0.0

ddp:
  backend: 'nccl'  # 'nccl', 'gloo', etc.

system:
  device: 'cuda'  # examples: 'cpu', 'cuda', 'cuda:0', 'cuda:1' etc., or try 'mps' on macbooks
  dtype: 'float16'  # 'float32', 'bfloat16', or 'float16', the latter will auto implement a GradScaler
  compile: true  # use PyTorch 2.0 to compile the model to be faster
